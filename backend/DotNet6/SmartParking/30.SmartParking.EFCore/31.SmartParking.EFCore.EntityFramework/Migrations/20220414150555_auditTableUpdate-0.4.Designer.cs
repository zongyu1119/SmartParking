// <auto-generated />
using System;
using SmartParking.EFCore.EntityFramework.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SmartParking.EFCore.EntityFramework.Migrations
{
    [DbContext(typeof(smartparkingContext))]
    [Migration("20220414150555_auditTableUpdate-0.4")]
    partial class auditTableUpdate04
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcCarinfo", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CAR_ID")
                        .HasComment("车辆ID");

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BRAND")
                        .HasComment("品牌");

                    b.Property<string>("CarNum")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CAR_NUM")
                        .HasComment("车牌号");

                    b.Property<int?>("CarPayType")
                        .HasColumnType("int")
                        .HasColumnName("CAR_PAY_TYPE")
                        .HasComment("车辆计费类型（0:临时车;1:月卡;2:年卡;3:免费）");

                    b.Property<int?>("CarType")
                        .HasColumnType("int")
                        .HasColumnName("CAR_TYPE")
                        .HasComment("车辆类型（0:普通车;1:新能源车;2:其他车）");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CITY")
                        .HasComment("市");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MODEL")
                        .HasComment("型号");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OWNER_ID")
                        .HasComment("车辆所属人ID");

                    b.Property<string>("Province")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PROVINCE")
                        .HasComment("省");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("CarId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_carinfo", (string)null);

                    b.HasComment("车辆信息表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcConfig", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<string>("ConfigSort")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONFIG_SORT")
                        .HasComment("配置项类别");

                    b.Property<string>("ConfigKey")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONFIG_KEY")
                        .HasComment("配置项键");

                    b.Property<string>("ConfigOrder")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONFIG_ORDER")
                        .HasComment("配置项序号（某个键下得序号）");

                    b.Property<string>("ConfigRemark")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONFIG_REMARK")
                        .HasComment("配置项备注");

                    b.Property<string>("ConfigValue")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONFIG_VALUE")
                        .HasComment("配置项值");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("TenantId", "ConfigSort", "ConfigKey", "ConfigOrder")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0 });

                    b.ToTable("bc_config", (string)null);

                    b.HasComment("配置信息表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcOwnerInfo", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OWNER_ID")
                        .HasComment("车主/业主ID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDRESS")
                        .HasComment("住址");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OWNER_NAME")
                        .HasComment("车主名");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PHONE")
                        .HasComment("用户电话");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<string>("Sex")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SEX")
                        .HasComment("用户性别");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.Property<string>("UserIdCardNum")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("USER_ID_CARD_NUM")
                        .HasComment("用户身份证号");

                    b.HasKey("OwnerId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_owner_info", (string)null);

                    b.HasComment("车主/车位业主信息表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParking", b =>
                {
                    b.Property<int>("ParkingId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("int")
                        .HasColumnName("PARKING_ID")
                        .HasComment("停车场ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("ParkingArea")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PARKING_AREA")
                        .HasComment("停车场面积");

                    b.Property<string>("ParkingName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PARKING_NAME")
                        .HasComment("停车场名称");

                    b.Property<int?>("ParkingType")
                        .HasColumnType("int")
                        .HasColumnName("PARKING_TYPE")
                        .HasComment("停车场类型（0：平面分区；1：条状分区；立体）");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("ParkingId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_parking", (string)null);

                    b.HasComment("停车场表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParkingArea", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AREA_ID")
                        .HasComment("分区ID");

                    b.Property<string>("AreaAddress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AREA_ADDRESS")
                        .HasComment("分区地址");

                    b.Property<string>("AreaCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AREA_CODE")
                        .HasComment("分区编码");

                    b.Property<string>("AreaName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AREA_NAME")
                        .HasComment("分区名称");

                    b.Property<int?>("AreaNo")
                        .HasColumnType("int")
                        .HasColumnName("AREA_NO")
                        .HasComment("分区序号（立体停车场为层数，平面停车场为排序）");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int")
                        .HasColumnName("PARKING_ID")
                        .HasComment("所属停车场ID");

                    b.Property<string>("PsCount")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PS_COUNT")
                        .HasComment("分区车位数");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("AreaId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_parking_area", (string)null);

                    b.HasComment("停车场分区表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParkingAreaManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("MANAGER_ID")
                        .HasComment("管理员ID");

                    b.Property<int>("ParkingAreaId")
                        .HasColumnType("int")
                        .HasColumnName("PARKING_AREA_ID")
                        .HasComment("停车场分区ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("ManagerId", "ParkingAreaId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("bc_parking_area_manager", (string)null);

                    b.HasComment("停车场分区与管理员对应关系表(多对多关系)");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParkingManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MANAGER_ID")
                        .HasComment("车主/业主ID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDRESS")
                        .HasComment("住址");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("ManagerIdCardNum")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MANAGER_ID_CARD_NUM")
                        .HasComment("用户身份证号");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MANAGER_NAME")
                        .HasComment("车主名");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PHONE")
                        .HasComment("用户电话");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<string>("Sex")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SEX")
                        .HasComment("用户性别");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("ManagerId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_parking_manager", (string)null);

                    b.HasComment("停车场管理员表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParkingRate", b =>
                {
                    b.Property<int>("ParkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PARKING_ID")
                        .HasComment("停车场id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<decimal?>("FreeTime")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("FREE_TIME")
                        .HasComment("免费时长");

                    b.Property<string>("FreeTimeAddToNormal")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("FREE_TIME_ADD_TO_NORMAL")
                        .HasComment("超出免费时长后免费时长是否计费");

                    b.Property<decimal?>("Price")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("PRICE")
                        .HasComment("计费单价（超出起步后得正常计费单价）");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<decimal?>("StartPrice")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("START_PRICE")
                        .HasComment("起步计费单价");

                    b.Property<decimal?>("StartTime")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("START_TIME")
                        .HasComment("起步计费时长（如：前一小时每小时10元，本字段代表前一小时）");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<decimal?>("TopMoneyDay")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("TOP_MONEY_DAY")
                        .HasComment("每日封顶计费金额（为0表示无）");

                    b.Property<decimal?>("TopMoneyMonth")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("TOP_MONEY_MONTH")
                        .HasComment("每月封顶价格（为0表示无）");

                    b.Property<decimal?>("TopMoneyYear")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("TOP_MONEY_YEAR")
                        .HasComment("每年封顶价格（为0表示无）");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("ParkingId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_parking_rate", (string)null);

                    b.HasComment("停车收费标准表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcParkingSpace", b =>
                {
                    b.Property<int>("PsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PS_ID")
                        .HasComment("车位ID");

                    b.Property<int?>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CAR_ID")
                        .HasComment("占用车辆ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("OccupyStartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("OCCUPY_START_TIME")
                        .HasComment("占用起始时间");

                    b.Property<int?>("OccupyStatus")
                        .HasColumnType("int")
                        .HasColumnName("OCCUPY_STATUS")
                        .HasComment("车位占用状态（0：空闲；1：占用）");

                    b.Property<string>("ParkingAreaId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PARKING_AREA_ID")
                        .HasComment("所属停车场区域");

                    b.Property<decimal?>("PsArea")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("PS_AREA")
                        .HasComment("车位面积");

                    b.Property<string>("PsCharg")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PS_CHARG")
                        .HasComment("是否有充电桩（0：无；1：有）");

                    b.Property<string>("PsCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PS_CODE")
                        .HasComment("车位编码");

                    b.Property<int?>("PsLash")
                        .HasColumnType("int")
                        .HasColumnName("PS_LASH")
                        .HasComment("子母车位(0:标准车位；1：子母车位；)");

                    b.Property<string>("PsOwner")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PS_OWNER")
                        .HasComment("车位当前归属（租受人/业主）");

                    b.Property<string>("PsRentStatus")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PS_RENT_STATUS")
                        .HasComment("车位当前出租出售状态（0：普通车位；1：长租车位；2：：已经出售）");

                    b.Property<int?>("PsType")
                        .HasColumnType("int")
                        .HasColumnName("PS_TYPE")
                        .HasComment("车位类型（0：普通车位；1：无障碍车位）");

                    b.Property<DateTime?>("RentEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("RENT_END_TIME")
                        .HasComment("租期截止时间");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("PsId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_parking_space", (string)null);

                    b.HasComment("车位表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcPower", b =>
                {
                    b.Property<int>("PowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POWER_ID")
                        .HasComment("权限ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_ID")
                        .HasComment("父权限ID");

                    b.Property<int?>("PowerLevel")
                        .HasColumnType("int")
                        .HasColumnName("POWER_LEVEL")
                        .HasComment("权限级别(多级权限区分权限级别)");

                    b.Property<string>("PowerName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("POWER_NAME")
                        .HasComment("权限名称");

                    b.Property<string>("PowerPath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("POWER_PATH")
                        .HasComment("权限路径");

                    b.Property<int?>("PowerType")
                        .HasColumnType("int")
                        .HasColumnName("POWER_TYPE")
                        .HasComment("权限类型（0：菜单和功能；1：功能）");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("PowerId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_power", (string)null);

                    b.HasComment("权限表");

                    b.HasData(
                        new
                        {
                            PowerId = 1,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2201),
                            PowerLevel = 0,
                            PowerName = "停车场监控",
                            PowerPath = "/",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 2,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2218),
                            PowerLevel = 0,
                            PowerName = "停车场设置",
                            PowerPath = "/",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 3,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2220),
                            PowerLevel = 0,
                            PowerName = "统计和报表",
                            PowerPath = "/",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 4,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2222),
                            PowerLevel = 0,
                            PowerName = "用户和权限",
                            PowerPath = "/",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 5,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2275),
                            PowerLevel = 0,
                            PowerName = "系统设置",
                            PowerPath = "/",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 101,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2277),
                            ParentId = 1,
                            PowerLevel = 1,
                            PowerName = "工作台",
                            PowerPath = "/Workbench",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 102,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2279),
                            ParentId = 1,
                            PowerLevel = 1,
                            PowerName = "停车监控",
                            PowerPath = "/ParkingMonitor",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 401,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2281),
                            ParentId = 4,
                            PowerLevel = 1,
                            PowerName = "用户管理",
                            PowerPath = "/UserInfoManagement",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 402,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2282),
                            ParentId = 4,
                            PowerLevel = 1,
                            PowerName = "角色管理",
                            PowerPath = "/RoleInfoManagement",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 201,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2284),
                            ParentId = 2,
                            PowerLevel = 1,
                            PowerName = "停车场管理",
                            PowerPath = "/ParkingManagement",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 301,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2285),
                            ParentId = 3,
                            PowerLevel = 1,
                            PowerName = "停车统计",
                            PowerPath = "/ParkingReport",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 501,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2287),
                            ParentId = 5,
                            PowerLevel = 1,
                            PowerName = "配置管理",
                            PowerPath = "/ConfigManagement",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            PowerId = 502,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(2288),
                            ParentId = 5,
                            PowerLevel = 1,
                            PowerName = "租户管理",
                            PowerPath = "/TenantManagement",
                            PowerType = 0,
                            Revision = 1,
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID")
                        .HasComment("角色ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ROLE_NAME")
                        .HasComment("角色名称");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_role", (string)null);

                    b.HasComment("角色表");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(4257),
                            Revision = 1,
                            RoleName = "管理员",
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcRolePower", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID")
                        .HasComment("角色ID");

                    b.Property<int>("PowerId")
                        .HasColumnType("int")
                        .HasColumnName("POWER_ID")
                        .HasComment("权限ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int")
                        .HasColumnName("IS_DELETE")
                        .HasComment("是否允许删除(1:允许;0:不允许)");

                    b.Property<int?>("IsInsert")
                        .HasColumnType("int")
                        .HasColumnName("IS_INSERT")
                        .HasComment("是否允许新增(1:允许;0:不允许)");

                    b.Property<int?>("IsSelect")
                        .HasColumnType("int")
                        .HasColumnName("IS_SELECT")
                        .HasComment("是否允许查询(1:允许;0:不允许)");

                    b.Property<int?>("IsUpdate")
                        .HasColumnType("int")
                        .HasColumnName("IS_UPDATE")
                        .HasComment("是否允许修改(1:允许;0:不允许)");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("RoleId", "PowerId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("bc_role_power", (string)null);

                    b.HasComment("角色权限中间表");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PowerId = 1,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6656),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 2,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6661),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 3,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6664),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 4,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6666),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 5,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6668),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 101,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6670),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 102,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6671),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 201,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6673),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 301,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6675),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 401,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6676),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 402,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6678),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 501,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6679),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PowerId = 502,
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 104, DateTimeKind.Local).AddTicks(6681),
                            IsDelete = 1,
                            IsInsert = 1,
                            IsSelect = 1,
                            IsUpdate = 1,
                            Revision = 1,
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcTenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<string>("TenantName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TENANT_NAME")
                        .HasComment("租户名称");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("TenantId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_tenant", (string)null);

                    b.HasComment("租户表");

                    b.HasData(
                        new
                        {
                            TenantId = 1,
                            Revision = 1,
                            TenantName = "租户1"
                        });
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.BcUserinfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USER_ID")
                        .HasComment("用户ID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDRESS")
                        .HasComment("住址");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PASSWORD")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PHONE")
                        .HasComment("用户电话");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("RoleId")
                        .HasMaxLength(255)
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID")
                        .HasComment("用户角色");

                    b.Property<string>("Sex")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SEX")
                        .HasComment("用户性别");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.Property<string>("UserIdCardNum")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("USER_ID_CARD_NUM")
                        .HasComment("用户身份证号");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("USER_NAME")
                        .HasComment("用户名");

                    b.Property<string>("UserNameRel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("USER_NAME_REL")
                        .HasComment("用户真实姓名");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("bc_userinfo", (string)null);

                    b.HasComment("用户表");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "北京市长安街1号",
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 105, DateTimeKind.Local).AddTicks(348),
                            Password = "827ccb0eea8a706c4c34a16891f84e7b",
                            Phone = "13333333332",
                            Revision = 1,
                            RoleId = 1,
                            Sex = "男",
                            TenantId = 1,
                            UserIdCardNum = "622222222222222221",
                            UserName = "Admin",
                            UserNameRel = "Administrator"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "北京市长安街1号",
                            CreatedBy = 1,
                            CreatedTime = new DateTime(2022, 4, 14, 23, 5, 54, 105, DateTimeKind.Local).AddTicks(359),
                            Password = "827ccb0eea8a706c4c34a16891f84e7b",
                            Phone = "13333333333",
                            Revision = 1,
                            RoleId = 1,
                            Sex = "男",
                            TenantId = 1,
                            UserIdCardNum = "622222222222222222",
                            UserName = "User",
                            UserNameRel = "User"
                        });
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.OpAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID");

                    b.Property<string>("ActionNmae")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ACTION_NAME")
                        .HasComment("操作方法名");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATE_BY")
                        .HasComment("操作用户");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_TIME")
                        .HasComment("操作时间");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("DESCRIPTION")
                        .HasComment("操作说明");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<string>("Type")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("TYPE")
                        .HasComment("操作类型");

                    b.HasKey("Id");

                    b.ToTable("op_audit");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.OpCarIo", b =>
                {
                    b.Property<int>("IoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IO_ID")
                        .HasComment("进出流水ID");

                    b.Property<int?>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CAR_ID")
                        .HasComment("车辆ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("IoPlaceType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IO_PLACE_TYPE")
                        .HasComment("进出地点类别(0:停车场;1:车位)");

                    b.Property<string>("IoType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IO_TYPE")
                        .HasComment("进出类别（1:进;0:出）");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int")
                        .HasColumnName("PARKING_ID")
                        .HasComment("停车场ID");

                    b.Property<int?>("PsId")
                        .HasColumnType("int")
                        .HasColumnName("PS_ID")
                        .HasComment("车位ID");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("IoId")
                        .HasName("PRIMARY");

                    b.ToTable("op_car_io", (string)null);

                    b.HasComment("车辆进出历史表");
                });

            modelBuilder.Entity("SmartParking.EFCore.EntityFramework.Entities.OpParkingStatusHi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("流水号");

                    b.Property<DateTime?>("ChangeTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CHANGE_TIME")
                        .HasComment("操作时间");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY")
                        .HasComment("创建人");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_TIME")
                        .HasComment("创建时间");

                    b.Property<int?>("DurationTime")
                        .HasColumnType("int")
                        .HasColumnName("DURATION_TIME")
                        .HasComment("出租/出售时长（天）");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OWNER_ID")
                        .HasComment("出租出售对象(车主/业主表ID)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("PRICE")
                        .HasComment("出租/出售价格(元)");

                    b.Property<int>("PsId")
                        .HasColumnType("int")
                        .HasColumnName("PS_ID")
                        .HasComment("车位ID");

                    b.Property<int?>("PsStatusType")
                        .HasColumnType("int")
                        .HasColumnName("PS_STATUS_TYPE")
                        .HasComment("出租/出售类型（1：出租；2出售）");

                    b.Property<int?>("Revision")
                        .HasColumnType("int")
                        .HasColumnName("REVISION")
                        .HasComment("乐观锁");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TENANT_ID")
                        .HasComment("租户号");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY")
                        .HasComment("更新人");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_TIME")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("op_parking_status_his", (string)null);

                    b.HasComment("车位出租出售历史信息表");
                });
#pragma warning restore 612, 618
        }
    }
}
